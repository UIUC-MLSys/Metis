Winner:
[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
[[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] 
cost: 11619.665880193295


[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
[[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|
|-------[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
|       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |
|       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
|       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |
|       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
|       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |
|       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
|       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |
|       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
|       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |       |
|       |       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |       |       |
|       |       |       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |       |       |       |
|       |       |       |       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (2, 4), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]] (cost: 12336.665552368164)
|       |       |       |       |       |       |       |
|       |       |       |       |       |       |       [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 12308.253247531393) 
|       |       |       |       |       |       |
|       |       |       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 12319.189322576109)
|       |       |       |       |       |
|       |       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
|       |       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 11897.923250188413)
|       |       |       |       |
|       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
|       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 11619.665880193295)
|       |       |       |
|       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
|       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 12312.789322576109)
|       |       |
|       |       [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
|       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 12311.509322576108)
|       |
|       [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
|       [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 12288.324583196225)
|
[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
[[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 12404.345262670102)

inter_stage_plan: InterStagePlan(ns_idx=0, node_sequence=(<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), dg_idx=3, device_groups=[4, 4, 4, 8, 4, 4, 4], num_stage=7, batches=2, gbs=128)
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.19999999999999996, 0.19999999999999996, 0.19999999999999996, 0.22857142857142856, 0.05714285714285714, 0.05714285714285714, 0.05714285714285714]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
adj_stage_compute_performance(2): [0.22262671123872554, 0.2167605268435004, 0.21241520506925954, 0.16258672698352195, 0.05977041377127187, 0.05957577994694485, 0.05939556344293835]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 6488.711833953857, fb_sync_cost: 5860.140800476074, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 22.149565217391306
cost: 12404.345262670102
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.2009436714143119, 0.2009436714143119, 0.2009436714143119, 0.22964991018778508, 0.05741247754694627, 0.05741247754694627, 0.05269412047538658]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
adj_stage_compute_performance(2): [0.22380906901056602, 0.2178446938490608, 0.2134361093059968, 0.1633538692165264, 0.06005071192562486, 0.05985409018956926, 0.05476805970343121]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 6492.54035949707, fb_sync_cost: 5740.291595458984, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 22.149565217391306
cost: 12288.324583196225
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20225183448126338, 0.20225183448126338, 0.20225183448126338, 0.23114495369287247, 0.05778623842321812, 0.05778623842321812, 0.046527066016901056]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.2254501614576991, 0.2193477053310002, 0.21485053612072902, 0.16441731897360823, 0.06043896390789215, 0.06023958818932856, 0.048353936964206555]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 7222.209930419922, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 7.429565217391305
cost: 12311.509322576108
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20321692671244715, 0.20321692671244715, 0.20321692671244715, 0.23224791624279678, 0.05329024369592966, 0.058061979060699195, 0.04674908086323287]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.22666299106455615, 0.22045703312326237, 0.2158937352630258, 0.1652018749091352, 0.055734618216175695, 0.060540370558268955, 0.048593666821607207]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 7222.209930419922, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 8.709565217391305
cost: 12312.789322576109
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20455495397463, 0.20455495397463, 0.20455495397463, 0.23377709025672003, 0.04705688762760495, 0.05844427256418001, 0.04705688762760495]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.22834664144859118, 0.22199508568808085, 0.2173391751239453, 0.16628960227500036, 0.049212705094524765, 0.06095734364146699, 0.04892596952348296]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 6511.806488037109, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 25.989565217391306
cost: 11619.665880193295
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20554220475006746, 0.20554220475006746, 0.20554220475006746, 0.23490537685722, 0.047283999940933664, 0.05390000901071035, 0.047283999940933664]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
adj_stage_compute_performance(2): [0.22959113735051592, 0.22313040624737826, 0.21840534662207875, 0.16709217163645196, 0.04944814259244557, 0.05621449867366022, 0.04917135637060206]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 6790.063858032227, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 25.989565217391306
cost: 11897.923250188413
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
profile_cost of (8, (8, 1)): [2804.064989089966, 2804.064989089966, 2804.064989089966, 2804.064989089966, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935, 3271.4091539382935]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.2069111306671994, 0.2069111306671994, 0.2069111306671994, 0.2364698636196565, 0.047598914792915115, 0.047598914792915115, 0.047598914792915115]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
adj_stage_compute_performance(2): [0.23131902388950595, 0.2247046618058121, 0.2198827438866242, 0.16820501755819894, 0.049774314351285966, 0.04963869867184426, 0.04951153735309214]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [12, 12, 12, 12, 4, 4, 4, 4]
execution_cost: 7222.209930419922, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 15.109565217391307
cost: 12319.189322576109
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
profile_cost of (8, (4, 2)): [3191.3657188415527, 3191.3657188415527, 3169.3599224090576, 3169.3599224090576]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.2056911846234022, 0.2056911846234022, 0.2056911846234022, 0.24097162998763094, 0.04731827204738754, 0.04731827204738754, 0.04731827204738754]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
adj_stage_compute_performance(2): [0.23056374015463627, 0.22382345795444986, 0.2189097433573028, 0.17140720019313285, 0.04953508551118751, 0.049396888064685354, 0.04926730592773974]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [25, 25, 7, 7]
execution_cost: 7210.578203201294, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 15.80521739130435
cost: 12308.253247531393
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (2, 4), (1, 4), (1, 4), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (2, 4), (1, 4), (1, 4), (1, 4)]
profile_cost of (8, (2, 4)): [3638.246774673462, 3591.9705629348755]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.21196497213114826, 0.21196497213114826, 0.21196497213114826, 0.21782050314411971, 0.04876152682081187, 0.04876152682081187, 0.04876152682081187]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 2, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (2, 4), (1, 4), (1, 4), (1, 4)], layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
data loadbalancer: [50, 14]
execution_cost: 7246.085643768311, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 4.385414123535156, dp_cost: 18.521993885869566, pp_cost: 17.196521739130436
cost: 12336.665552368164