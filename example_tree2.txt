Winner:
[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
[[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] 
cost: 9986.668851681585

[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
[[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|
|-------[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
|       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |
|       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
|       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |
|       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
|       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |
|       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
|       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |
|       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
|       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |       |
|       |       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
|       |       |       |       |       |       |
|       |       |       |       |       |       |-------[(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       |       [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]] (cost: 10706.114954067729)
|       |       |       |       |       |       |
|       |       |       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
|       |       |       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 10710.644745236272)
|       |       |       |       |       |
|       |       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
|       |       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 10264.926221676702)
|       |       |       |       |
|       |       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
|       |       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 9986.668851681585)
|       |       |       |
|       |       |       [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
|       |       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 10707.444745236273)
|       |       |
|       |       [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
|       |       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 10706.804745236272)      
|       |
|       [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
|       [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]] (cost: 10928.398602047795)
|
[(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
[[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]] (cost: 10784.815561200017)

inter_stage_plan: InterStagePlan(ns_idx=0, node_sequence=(<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), dg_idx=3, device_groups=[4, 4, 4, 8, 4, 4, 4], num_stage=7, batches=4, gbs=128)
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20047034993794183, 0.20047034993794183, 0.20047034993794183, 0.2267572216679385, 0.05727724283941196, 0.05727724283941196, 0.05727724283941196]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
adj_stage_compute_performance(2): [0.2229174694578374, 0.21709784587860523, 0.2127870135976925, 0.16129625089754349, 0.059883944143062896, 0.059690855157607275, 0.059512069059963174]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 4878.3077001571655, fb_sync_cost: 5860.140800476074, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 11.074782608695653
cost: 10784.815561200017
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20141847565013118, 0.20141847565013118, 0.20141847565013118, 0.22782967129629775, 0.05754813590003749, 0.05754813590003749, 0.05281862995323373]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
adj_stage_compute_performance(2): [0.22410263874931977, 0.21818553810067423, 0.21381189664570086, 0.1620591024753606, 0.060165459245844335, 0.05997039596252485, 0.05487613083458629]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 5149.099946022034, fb_sync_cost: 5740.291595458984, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 3.7147826086956526
cost: 10928.398602047795
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (2, 2)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20273284828371116, 0.20273284828371116, 0.20273284828371116, 0.2293163923336942, 0.0579236709382032, 0.0579236709382032, 0.046637720938765816]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.2257476559419486, 0.2196934756494874, 0.2152318830317925, 0.16311663232026988, 0.060555411014196286, 0.06035761253419707, 0.04845013971842033]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 5619.270920753479, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 3.7147826086956526
cost: 10706.804745236272
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20370254751956812, 0.20370254751956812, 0.20370254751956812, 0.2304132443352222, 0.05341758963887815, 0.05820072786273376, 0.04686079560446155]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.22696339670890672, 0.22080646352046618, 0.21627921401117073, 0.16389684171926758, 0.05584265451218984, 0.06065954099193698, 0.04869081002181332]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 5619.270920753479, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 4.354782608695652
cost: 10707.444745236273
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (2, 2), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20504699845581825, 0.20504699845581825, 0.20504699845581825, 0.2319339877222982, 0.04717008010429232, 0.05858485670166237, 0.04717008010429232]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
adj_stage_compute_performance(2): [0.2286511118632476, 0.22234963187580326, 0.21773042858931999, 0.16497857223752113, 0.049308901069832684, 0.06107811468406207, 0.04902442612688372]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 4889.8550271987915, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 12.994782608695653
cost: 9986.668851681585
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (4, 1), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20603901600361016, 0.20603901600361016, 0.20603901600361016, 0.23305608454635604, 0.047398288990774945, 0.054030289461263724, 0.047398288990774945]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
adj_stage_compute_performance(2): [0.22989862340964418, 0.2234887544047328, 0.21880089280593373, 0.1657767387061931, 0.04954539443173596, 0.05632655830698697, 0.0492707872091076]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (8,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [8], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 20730.001, 60660.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 44805.998999999996, 4875.999000000003]
layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 9, 10]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 5168.112397193909, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 12.994782608695653
cost: 10264.926221676702
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (2, 2), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
profile_cost of (8, (8, 1)): [1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1406.8794250488281, 1652.668833732605, 1652.668833732605, 1652.668833732605, 1652.668833732605]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.20741458965982032, 0.20741458965982032, 0.20741458965982032, 0.23461203165064545, 0.0477147331232979, 0.0477147331232979, 0.0477147331232979]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 497520.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, -104304.00099999999, 65535.999, 65535.999, 44805.998999999996]
MEMORY EXCEEDED
TESTING NEW PARTITION
current partition: [[0, 1], [2, 3], [4, 5], [6, 7], [], [], [9]]
MP strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
adj_stage_compute_performance(2): [0.23163072159960868, 0.22506832543303257, 0.2202842910442239, 0.16688351022451894, 0.049873041595375346, 0.0497384913842386, 0.04961232911187482]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1, 2)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (3, 4)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (5, 6)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (7,)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
new partition: [[0, 1, 2], [3, 4], [5, 6], [7], [], [], [9]]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
stage_memory_demand: [80560.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [247119.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)], layer_partition: [0, 3, 5, 7, 8, 8, 8, 9]
data loadbalancer: [6, 6, 6, 6, 2, 2, 2, 2]
execution_cost: 5619.270920753479, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 6.578121185302734, dp_cost: 24.815726902173914, pp_cost: 7.554782608695653
cost: 10710.644745236272
NAIVE STRATEGY: [(4, 1), (4, 1), (4, 1), (8, 1), (4, 1), (4, 1), (4, 1)]
TESTING NEW STRATEGY
curr_strategy: [(4, 1), (4, 1), (4, 1), (8, 1), (1, 4), (1, 4), (1, 4)]
next_strategy: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
valid_strategies: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)]
profile_cost of (8, (4, 2)): [1527.573823928833, 1527.573823928833, 1782.1694612503052, 1782.1694612503052]
stage_memory_capacity: [327680, 327680, 327680, 393216, 65536, 65536, 65536]
stage_compute_performance: [0.21101191851974463, 0.21101191851974463, 0.21101191851974463, 0.22133740023682957, 0.0485422814013122, 0.0485422814013122, 0.0485422814013122]
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (0, 1)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (2, 3)
Testing Mapping: ('A100', 'A100', 'A100', 'A100') (4, 5)
Testing Mapping: ('A100', 'A100', 'A100', 'A100', 'V100', 'V100', 'V100', 'V100') (6, 7)
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') ()
Testing Mapping: ('V100', 'V100', 'V100', 'V100') (9,)
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
stage_memory_demand: [59830.001, 41460.001, 41460.001, 248760.001, 0.001, 0.001, 20730.001], memory_state: [267849.999, 286219.999, 286219.999, 144455.999, 65535.999, 65535.999, 44805.998999999996]
layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
node_sequence: (<DeviceType.A100: 'a100'>, <DeviceType.V100: 'v100'>), device_group: [4, 4, 4, 8, 4, 4, 4], num_stage: 7, batches: 4, gbs: 128, strategies: [(4, 1), (4, 1), (4, 1), (4, 2), (1, 4), (1, 4), (1, 4)], layer_partition: [0, 2, 4, 6, 8, 8, 8, 9]
data loadbalancer: [12, 12, 4, 4]
execution_cost: 5622.87974357605, fb_sync_cost: 5048.526763916016, parameter_upate_costs: 4.385414123535156, dp_cost: 18.521993885869566, pp_cost: 7.902608695652175
cost: 10706.114954067729